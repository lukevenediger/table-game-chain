// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package checkers

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Game            protoreflect.MessageDescriptor
	fd_Game_board      protoreflect.FieldDescriptor
	fd_Game_red        protoreflect.FieldDescriptor
	fd_Game_black      protoreflect.FieldDescriptor
	fd_Game_turn       protoreflect.FieldDescriptor
	fd_Game_state      protoreflect.FieldDescriptor
	fd_Game_start_time protoreflect.FieldDescriptor
	fd_Game_end_time   protoreflect.FieldDescriptor
	fd_Game_creator    protoreflect.FieldDescriptor
)

func init() {
	file_tablegamechain_checkers_game_proto_init()
	md_Game = File_tablegamechain_checkers_game_proto.Messages().ByName("Game")
	fd_Game_board = md_Game.Fields().ByName("board")
	fd_Game_red = md_Game.Fields().ByName("red")
	fd_Game_black = md_Game.Fields().ByName("black")
	fd_Game_turn = md_Game.Fields().ByName("turn")
	fd_Game_state = md_Game.Fields().ByName("state")
	fd_Game_start_time = md_Game.Fields().ByName("start_time")
	fd_Game_end_time = md_Game.Fields().ByName("end_time")
	fd_Game_creator = md_Game.Fields().ByName("creator")
}

var _ protoreflect.Message = (*fastReflection_Game)(nil)

type fastReflection_Game Game

func (x *Game) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Game)(x)
}

func (x *Game) slowProtoReflect() protoreflect.Message {
	mi := &file_tablegamechain_checkers_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Game_messageType fastReflection_Game_messageType
var _ protoreflect.MessageType = fastReflection_Game_messageType{}

type fastReflection_Game_messageType struct{}

func (x fastReflection_Game_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Game)(nil)
}
func (x fastReflection_Game_messageType) New() protoreflect.Message {
	return new(fastReflection_Game)
}
func (x fastReflection_Game_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Game
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Game) Descriptor() protoreflect.MessageDescriptor {
	return md_Game
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Game) Type() protoreflect.MessageType {
	return _fastReflection_Game_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Game) New() protoreflect.Message {
	return new(fastReflection_Game)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Game) Interface() protoreflect.ProtoMessage {
	return (*Game)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Game) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Board != "" {
		value := protoreflect.ValueOfString(x.Board)
		if !f(fd_Game_board, value) {
			return
		}
	}
	if x.Red != "" {
		value := protoreflect.ValueOfString(x.Red)
		if !f(fd_Game_red, value) {
			return
		}
	}
	if x.Black != "" {
		value := protoreflect.ValueOfString(x.Black)
		if !f(fd_Game_black, value) {
			return
		}
	}
	if x.Turn != "" {
		value := protoreflect.ValueOfString(x.Turn)
		if !f(fd_Game_turn, value) {
			return
		}
	}
	if x.State != "" {
		value := protoreflect.ValueOfString(x.State)
		if !f(fd_Game_state, value) {
			return
		}
	}
	if x.StartTime != int64(0) {
		value := protoreflect.ValueOfInt64(x.StartTime)
		if !f(fd_Game_start_time, value) {
			return
		}
	}
	if x.EndTime != int64(0) {
		value := protoreflect.ValueOfInt64(x.EndTime)
		if !f(fd_Game_end_time, value) {
			return
		}
	}
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_Game_creator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Game) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "tablegamechain.checkers.Game.board":
		return x.Board != ""
	case "tablegamechain.checkers.Game.red":
		return x.Red != ""
	case "tablegamechain.checkers.Game.black":
		return x.Black != ""
	case "tablegamechain.checkers.Game.turn":
		return x.Turn != ""
	case "tablegamechain.checkers.Game.state":
		return x.State != ""
	case "tablegamechain.checkers.Game.start_time":
		return x.StartTime != int64(0)
	case "tablegamechain.checkers.Game.end_time":
		return x.EndTime != int64(0)
	case "tablegamechain.checkers.Game.creator":
		return x.Creator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tablegamechain.checkers.Game"))
		}
		panic(fmt.Errorf("message tablegamechain.checkers.Game does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Game) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "tablegamechain.checkers.Game.board":
		x.Board = ""
	case "tablegamechain.checkers.Game.red":
		x.Red = ""
	case "tablegamechain.checkers.Game.black":
		x.Black = ""
	case "tablegamechain.checkers.Game.turn":
		x.Turn = ""
	case "tablegamechain.checkers.Game.state":
		x.State = ""
	case "tablegamechain.checkers.Game.start_time":
		x.StartTime = int64(0)
	case "tablegamechain.checkers.Game.end_time":
		x.EndTime = int64(0)
	case "tablegamechain.checkers.Game.creator":
		x.Creator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tablegamechain.checkers.Game"))
		}
		panic(fmt.Errorf("message tablegamechain.checkers.Game does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Game) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "tablegamechain.checkers.Game.board":
		value := x.Board
		return protoreflect.ValueOfString(value)
	case "tablegamechain.checkers.Game.red":
		value := x.Red
		return protoreflect.ValueOfString(value)
	case "tablegamechain.checkers.Game.black":
		value := x.Black
		return protoreflect.ValueOfString(value)
	case "tablegamechain.checkers.Game.turn":
		value := x.Turn
		return protoreflect.ValueOfString(value)
	case "tablegamechain.checkers.Game.state":
		value := x.State
		return protoreflect.ValueOfString(value)
	case "tablegamechain.checkers.Game.start_time":
		value := x.StartTime
		return protoreflect.ValueOfInt64(value)
	case "tablegamechain.checkers.Game.end_time":
		value := x.EndTime
		return protoreflect.ValueOfInt64(value)
	case "tablegamechain.checkers.Game.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tablegamechain.checkers.Game"))
		}
		panic(fmt.Errorf("message tablegamechain.checkers.Game does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Game) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "tablegamechain.checkers.Game.board":
		x.Board = value.Interface().(string)
	case "tablegamechain.checkers.Game.red":
		x.Red = value.Interface().(string)
	case "tablegamechain.checkers.Game.black":
		x.Black = value.Interface().(string)
	case "tablegamechain.checkers.Game.turn":
		x.Turn = value.Interface().(string)
	case "tablegamechain.checkers.Game.state":
		x.State = value.Interface().(string)
	case "tablegamechain.checkers.Game.start_time":
		x.StartTime = value.Int()
	case "tablegamechain.checkers.Game.end_time":
		x.EndTime = value.Int()
	case "tablegamechain.checkers.Game.creator":
		x.Creator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tablegamechain.checkers.Game"))
		}
		panic(fmt.Errorf("message tablegamechain.checkers.Game does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Game) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "tablegamechain.checkers.Game.board":
		panic(fmt.Errorf("field board of message tablegamechain.checkers.Game is not mutable"))
	case "tablegamechain.checkers.Game.red":
		panic(fmt.Errorf("field red of message tablegamechain.checkers.Game is not mutable"))
	case "tablegamechain.checkers.Game.black":
		panic(fmt.Errorf("field black of message tablegamechain.checkers.Game is not mutable"))
	case "tablegamechain.checkers.Game.turn":
		panic(fmt.Errorf("field turn of message tablegamechain.checkers.Game is not mutable"))
	case "tablegamechain.checkers.Game.state":
		panic(fmt.Errorf("field state of message tablegamechain.checkers.Game is not mutable"))
	case "tablegamechain.checkers.Game.start_time":
		panic(fmt.Errorf("field start_time of message tablegamechain.checkers.Game is not mutable"))
	case "tablegamechain.checkers.Game.end_time":
		panic(fmt.Errorf("field end_time of message tablegamechain.checkers.Game is not mutable"))
	case "tablegamechain.checkers.Game.creator":
		panic(fmt.Errorf("field creator of message tablegamechain.checkers.Game is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tablegamechain.checkers.Game"))
		}
		panic(fmt.Errorf("message tablegamechain.checkers.Game does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Game) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "tablegamechain.checkers.Game.board":
		return protoreflect.ValueOfString("")
	case "tablegamechain.checkers.Game.red":
		return protoreflect.ValueOfString("")
	case "tablegamechain.checkers.Game.black":
		return protoreflect.ValueOfString("")
	case "tablegamechain.checkers.Game.turn":
		return protoreflect.ValueOfString("")
	case "tablegamechain.checkers.Game.state":
		return protoreflect.ValueOfString("")
	case "tablegamechain.checkers.Game.start_time":
		return protoreflect.ValueOfInt64(int64(0))
	case "tablegamechain.checkers.Game.end_time":
		return protoreflect.ValueOfInt64(int64(0))
	case "tablegamechain.checkers.Game.creator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tablegamechain.checkers.Game"))
		}
		panic(fmt.Errorf("message tablegamechain.checkers.Game does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Game) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in tablegamechain.checkers.Game", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Game) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Game) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Game) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Game) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Game)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Board)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Red)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Black)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Turn)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.State)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.StartTime != 0 {
			n += 1 + runtime.Sov(uint64(x.StartTime))
		}
		if x.EndTime != 0 {
			n += 1 + runtime.Sov(uint64(x.EndTime))
		}
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Game)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0x4a
		}
		if x.EndTime != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EndTime))
			i--
			dAtA[i] = 0x40
		}
		if x.StartTime != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StartTime))
			i--
			dAtA[i] = 0x38
		}
		if len(x.State) > 0 {
			i -= len(x.State)
			copy(dAtA[i:], x.State)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.State)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Turn) > 0 {
			i -= len(x.Turn)
			copy(dAtA[i:], x.Turn)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Turn)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Black) > 0 {
			i -= len(x.Black)
			copy(dAtA[i:], x.Black)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Black)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Red) > 0 {
			i -= len(x.Red)
			copy(dAtA[i:], x.Red)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Red)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Board) > 0 {
			i -= len(x.Board)
			copy(dAtA[i:], x.Board)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Board)))
			i--
			dAtA[i] = 0x12
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Game)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Game: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Game: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Board", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Board = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Red", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Red = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Black", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Black = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Turn", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Turn = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.State = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
				}
				x.StartTime = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StartTime |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
				}
				x.EndTime = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EndTime |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_IndexedGame       protoreflect.MessageDescriptor
	fd_IndexedGame_index protoreflect.FieldDescriptor
	fd_IndexedGame_game  protoreflect.FieldDescriptor
)

func init() {
	file_tablegamechain_checkers_game_proto_init()
	md_IndexedGame = File_tablegamechain_checkers_game_proto.Messages().ByName("IndexedGame")
	fd_IndexedGame_index = md_IndexedGame.Fields().ByName("index")
	fd_IndexedGame_game = md_IndexedGame.Fields().ByName("game")
}

var _ protoreflect.Message = (*fastReflection_IndexedGame)(nil)

type fastReflection_IndexedGame IndexedGame

func (x *IndexedGame) ProtoReflect() protoreflect.Message {
	return (*fastReflection_IndexedGame)(x)
}

func (x *IndexedGame) slowProtoReflect() protoreflect.Message {
	mi := &file_tablegamechain_checkers_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_IndexedGame_messageType fastReflection_IndexedGame_messageType
var _ protoreflect.MessageType = fastReflection_IndexedGame_messageType{}

type fastReflection_IndexedGame_messageType struct{}

func (x fastReflection_IndexedGame_messageType) Zero() protoreflect.Message {
	return (*fastReflection_IndexedGame)(nil)
}
func (x fastReflection_IndexedGame_messageType) New() protoreflect.Message {
	return new(fastReflection_IndexedGame)
}
func (x fastReflection_IndexedGame_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_IndexedGame
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_IndexedGame) Descriptor() protoreflect.MessageDescriptor {
	return md_IndexedGame
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_IndexedGame) Type() protoreflect.MessageType {
	return _fastReflection_IndexedGame_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_IndexedGame) New() protoreflect.Message {
	return new(fastReflection_IndexedGame)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_IndexedGame) Interface() protoreflect.ProtoMessage {
	return (*IndexedGame)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_IndexedGame) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Index != int64(0) {
		value := protoreflect.ValueOfInt64(x.Index)
		if !f(fd_IndexedGame_index, value) {
			return
		}
	}
	if x.Game != nil {
		value := protoreflect.ValueOfMessage(x.Game.ProtoReflect())
		if !f(fd_IndexedGame_game, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_IndexedGame) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "tablegamechain.checkers.IndexedGame.index":
		return x.Index != int64(0)
	case "tablegamechain.checkers.IndexedGame.game":
		return x.Game != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tablegamechain.checkers.IndexedGame"))
		}
		panic(fmt.Errorf("message tablegamechain.checkers.IndexedGame does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IndexedGame) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "tablegamechain.checkers.IndexedGame.index":
		x.Index = int64(0)
	case "tablegamechain.checkers.IndexedGame.game":
		x.Game = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tablegamechain.checkers.IndexedGame"))
		}
		panic(fmt.Errorf("message tablegamechain.checkers.IndexedGame does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_IndexedGame) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "tablegamechain.checkers.IndexedGame.index":
		value := x.Index
		return protoreflect.ValueOfInt64(value)
	case "tablegamechain.checkers.IndexedGame.game":
		value := x.Game
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tablegamechain.checkers.IndexedGame"))
		}
		panic(fmt.Errorf("message tablegamechain.checkers.IndexedGame does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IndexedGame) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "tablegamechain.checkers.IndexedGame.index":
		x.Index = value.Int()
	case "tablegamechain.checkers.IndexedGame.game":
		x.Game = value.Message().Interface().(*Game)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tablegamechain.checkers.IndexedGame"))
		}
		panic(fmt.Errorf("message tablegamechain.checkers.IndexedGame does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IndexedGame) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "tablegamechain.checkers.IndexedGame.game":
		if x.Game == nil {
			x.Game = new(Game)
		}
		return protoreflect.ValueOfMessage(x.Game.ProtoReflect())
	case "tablegamechain.checkers.IndexedGame.index":
		panic(fmt.Errorf("field index of message tablegamechain.checkers.IndexedGame is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tablegamechain.checkers.IndexedGame"))
		}
		panic(fmt.Errorf("message tablegamechain.checkers.IndexedGame does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_IndexedGame) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "tablegamechain.checkers.IndexedGame.index":
		return protoreflect.ValueOfInt64(int64(0))
	case "tablegamechain.checkers.IndexedGame.game":
		m := new(Game)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tablegamechain.checkers.IndexedGame"))
		}
		panic(fmt.Errorf("message tablegamechain.checkers.IndexedGame does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_IndexedGame) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in tablegamechain.checkers.IndexedGame", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_IndexedGame) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_IndexedGame) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_IndexedGame) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_IndexedGame) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*IndexedGame)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Index != 0 {
			n += 1 + runtime.Sov(uint64(x.Index))
		}
		if x.Game != nil {
			l = options.Size(x.Game)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*IndexedGame)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Game != nil {
			encoded, err := options.Marshal(x.Game)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.Index != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Index))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*IndexedGame)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IndexedGame: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: IndexedGame: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
				}
				x.Index = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Index |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Game", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Game == nil {
					x.Game = &Game{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Game); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: tablegamechain/checkers/game.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// All possible checkers game states
type GameState int32

const (
	// The game state is not set
	GameState_GAME_STATE_UNSPECIFIED GameState = 0
	// The game board is set up and ready to play
	GameState_GAME_STATE_READY GameState = 1
	// The game is in progress
	GameState_GAME_STATE_PLAYING GameState = 2
	// The game is complete - no more moves can be made
	GameState_GAME_STATE_COMPLETE GameState = 3
	// The game has expired - no further moves will be accepted
	GameState_GAME_STATE_EXPIRED GameState = 4
	// The game has been forfeited by one of the players
	GameState_GAME_STATE_FORFEITED GameState = 5
)

// Enum value maps for GameState.
var (
	GameState_name = map[int32]string{
		0: "GAME_STATE_UNSPECIFIED",
		1: "GAME_STATE_READY",
		2: "GAME_STATE_PLAYING",
		3: "GAME_STATE_COMPLETE",
		4: "GAME_STATE_EXPIRED",
		5: "GAME_STATE_FORFEITED",
	}
	GameState_value = map[string]int32{
		"GAME_STATE_UNSPECIFIED": 0,
		"GAME_STATE_READY":       1,
		"GAME_STATE_PLAYING":     2,
		"GAME_STATE_COMPLETE":    3,
		"GAME_STATE_EXPIRED":     4,
		"GAME_STATE_FORFEITED":   5,
	}
)

func (x GameState) Enum() *GameState {
	p := new(GameState)
	*p = x
	return p
}

func (x GameState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameState) Descriptor() protoreflect.EnumDescriptor {
	return file_tablegamechain_checkers_game_proto_enumTypes[0].Descriptor()
}

func (GameState) Type() protoreflect.EnumType {
	return &file_tablegamechain_checkers_game_proto_enumTypes[0]
}

func (x GameState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameState.Descriptor instead.
func (GameState) EnumDescriptor() ([]byte, []int) {
	return file_tablegamechain_checkers_game_proto_rawDescGZIP(), []int{0}
}

// Game defines the Game type.
type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board     string `protobuf:"bytes,2,opt,name=board,proto3" json:"board,omitempty"`
	Red       string `protobuf:"bytes,3,opt,name=red,proto3" json:"red,omitempty"`
	Black     string `protobuf:"bytes,4,opt,name=black,proto3" json:"black,omitempty"`
	Turn      string `protobuf:"bytes,5,opt,name=turn,proto3" json:"turn,omitempty"`
	State     string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	StartTime int64  `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   int64  `protobuf:"varint,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Creator   string `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tablegamechain_checkers_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_tablegamechain_checkers_game_proto_rawDescGZIP(), []int{0}
}

func (x *Game) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

func (x *Game) GetRed() string {
	if x != nil {
		return x.Red
	}
	return ""
}

func (x *Game) GetBlack() string {
	if x != nil {
		return x.Black
	}
	return ""
}

func (x *Game) GetTurn() string {
	if x != nil {
		return x.Turn
	}
	return ""
}

func (x *Game) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Game) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Game) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Game) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

// A game identified by an index.
type IndexedGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Game  *Game `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *IndexedGame) Reset() {
	*x = IndexedGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tablegamechain_checkers_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexedGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexedGame) ProtoMessage() {}

// Deprecated: Use IndexedGame.ProtoReflect.Descriptor instead.
func (*IndexedGame) Descriptor() ([]byte, []int) {
	return file_tablegamechain_checkers_game_proto_rawDescGZIP(), []int{1}
}

func (x *IndexedGame) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *IndexedGame) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

var File_tablegamechain_checkers_game_proto protoreflect.FileDescriptor

var file_tablegamechain_checkers_game_proto_rawDesc = []byte{
	0x0a, 0x22, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x61, 0x6d, 0x65, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x22, 0xc2, 0x01,
	0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x22, 0x56, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x31, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x61, 0x6d,
	0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x2a, 0xa0, 0x01, 0x0a, 0x09, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x41,
	0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x46, 0x4f, 0x52, 0x46, 0x45, 0x49, 0x54, 0x45, 0x44, 0x10, 0x05, 0x42, 0xd3, 0x01,
	0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x61, 0x6d, 0x65, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x42, 0x09, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2c, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2d, 0x67, 0x61, 0x6d, 0x65, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0xa2, 0x02, 0x03, 0x54, 0x43, 0x58, 0xaa, 0x02,
	0x17, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0xca, 0x02, 0x17, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x67, 0x61, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x73, 0xe2, 0x02, 0x23, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x18, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x67, 0x61, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tablegamechain_checkers_game_proto_rawDescOnce sync.Once
	file_tablegamechain_checkers_game_proto_rawDescData = file_tablegamechain_checkers_game_proto_rawDesc
)

func file_tablegamechain_checkers_game_proto_rawDescGZIP() []byte {
	file_tablegamechain_checkers_game_proto_rawDescOnce.Do(func() {
		file_tablegamechain_checkers_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_tablegamechain_checkers_game_proto_rawDescData)
	})
	return file_tablegamechain_checkers_game_proto_rawDescData
}

var file_tablegamechain_checkers_game_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tablegamechain_checkers_game_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tablegamechain_checkers_game_proto_goTypes = []interface{}{
	(GameState)(0),      // 0: tablegamechain.checkers.GameState
	(*Game)(nil),        // 1: tablegamechain.checkers.Game
	(*IndexedGame)(nil), // 2: tablegamechain.checkers.IndexedGame
}
var file_tablegamechain_checkers_game_proto_depIdxs = []int32{
	1, // 0: tablegamechain.checkers.IndexedGame.game:type_name -> tablegamechain.checkers.Game
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tablegamechain_checkers_game_proto_init() }
func file_tablegamechain_checkers_game_proto_init() {
	if File_tablegamechain_checkers_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tablegamechain_checkers_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tablegamechain_checkers_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexedGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tablegamechain_checkers_game_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tablegamechain_checkers_game_proto_goTypes,
		DependencyIndexes: file_tablegamechain_checkers_game_proto_depIdxs,
		EnumInfos:         file_tablegamechain_checkers_game_proto_enumTypes,
		MessageInfos:      file_tablegamechain_checkers_game_proto_msgTypes,
	}.Build()
	File_tablegamechain_checkers_game_proto = out.File
	file_tablegamechain_checkers_game_proto_rawDesc = nil
	file_tablegamechain_checkers_game_proto_goTypes = nil
	file_tablegamechain_checkers_game_proto_depIdxs = nil
}
