syntax = "proto3";

package tablegamechain.checkers;

import "amino/amino.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "tablegamechain/checkers/game.proto";
import "tablegamechain/checkers/params.proto";

option go_package = "table-game-chain/x/checkers/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/table-game-chain/checkers/params";
  }

  // Queries a list of Game items.
  rpc Game(QueryGetGameRequest) returns (QueryGetGameResponse) {
    option (google.api.http).get = "/table-game-chain/checkers/game/{index}";
  }
  // Queries a list of Game items.
  rpc GameAll(QueryAllGameRequest) returns (QueryAllGameResponse) {
    option (google.api.http).get = "/table-game-chain/checkers/game";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryGetGameRequest is request type for the Query/Game RPC method.
message QueryGetGameRequest {
  string index = 1;
}

// QueryGetGameResponse is response type for the Query/Game RPC method.
message QueryGetGameResponse {
  Game game = 1 [(gogoproto.nullable) = false];
}

// QueryAllGameRequest is request type for the Query/AllGame RPC method.
message QueryAllGameRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAllGameResponse is response type for the Query/AllGame RPC method.
message QueryAllGameResponse {
  repeated Game game = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
